#!/usr/bin/env bash
set -euo pipefail
__dirname="$(dirname "$( readlink -m "${BASH_SOURCE[0]}" )" )"
__root="$(dirname "$__dirname" )"
cd "$__root"

. "$__root/config.env"

backupName="$1"

dir="$__root/data/$backupName"
mkdir -p "$dir"

if [[ -e "$dir/backup.wav" ]]; then
    echo "skipping recording because it already exists"
else
    echo "Recording for $duration seconds, sample rate $sampleRate..."
    sox -t waveaudio -c 2 -r $sampleRate -b 8 "$audioDevice" "$( wslpath -w "$dir" )/backup.wav" trim 0 "$duration"
    #sox -t waveaudio -c 2 -r 48k -b 8 "$audioDevice" "$( wslpath -w "$dir" )/backup.wav" trim 0 "$duration"
fi

if [[ -e "data/$backupName/subtracted.wav" ]]; then
    echo "skipping recording because it already exists"
else
    sox "data/$backupName/backup.wav" "data/$backupName/subtracted.wav" remix 1,2i
fi

for side in left right; do
    echo "Extracting $side channel..."
    case $side in
        left) channel=1 ;;
        right) channel=2 ;;
    esac
    file="$side.$sampleRate.s8"
    if [[ -e "$dir/$file" ]]; then
        echo "skipping $side because file already exists"
    else
        sox "$( wslpath -w "$dir" )/backup.wav" "$( wslpath -w "$dir" )/$file" remix $channel
    fi

    echo "Parsing $side channel..."
    outFile="$dir/$side.bits"
    if [[ -e "$outFile" ]]; then
        echo "Skipping parsing to $outFile because already exists"
    else
        "$__root/parse-raw.ts" --sampleRate $sampleRate --input "$dir/left.$sampleRate.s8" --output "$outFile"
    fi
done

echo "Done"